.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 50vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Spinner: Define size variable
$size: 140px;
$half-size: calc($size / 2);
$perspective: 700px;

// Cube container, centered and using the size variable
.cube-container {
  perspective: $perspective;
  width: $size;
  height: $size;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Cube, using the size variable for relative scaling
.cube {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  //transform: rotateX(-30deg) rotateY(45deg);
  transform: rotateX(-30deg) rotateY(45deg);
  animation: spin 4s infinite linear;
  color: white;
  font-weight: bold;
  font-size: large;
}

.cube-appear {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform: rotateX(-30deg) rotateY(45deg);
  animation: ease-in spin 4s infinite ;
  color: white;
  font-weight: bold;
  font-size: large;
}

.cube-disappear {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform: rotateX(-30deg) rotateY(45deg);
  animation: spin 4s infinite linear;
  color: white;
  font-weight: bold;
  font-size: large;
}

// Keyframes for spinning the cube
@keyframes spin {
  from {
    transform: rotateX(-30deg) rotateY(405deg);
  }
  to {
    transform: rotateX(-30deg) rotateY(45deg);
  }
}

//@keyframes spin {
//  from { transform: rotateX(0deg) rotateY(0deg); }
//  to { transform: rotateX(360deg) rotateY(360deg); }
//}

// Face styles, relative to the size variable
.face {
  position: absolute;
  width: $size;
  height: $size;
  background-color: rgba(255, 255, 255, 0.9);
  display: flex;
  justify-content: center;
  align-items: center;
  //border: 2px solid #333; // Optional for better visibility
}

// Specific face transformations based on size variable
.front {
  transform: translateZ($half-size);
  background-color: #ff5722;
}
.back {
  transform: rotateY(180deg) translateZ($half-size);
  background-color: #03a9f4;
}
.left {
  transform: rotateY(-90deg) translateZ($half-size);
  background-color: #303f9f;
}
.right {
  transform: rotateY(90deg) translateZ($half-size);
  background-color: #009588;
}
.top {
  transform: rotateX(90deg) translateZ($half-size);
  background-color: #6739b7;
}
.bottom {
  transform: rotateX(-90deg) translateZ($half-size);
  background-color: #ffd740;
}
